################################################################################
# Node-RED Stack or Compose
################################################################################
# docker stack deploy realtime-sensing --compose-file docker-compose.yml
# docker-compose -f docker-compose.yml -p realtime-sensing up
################################################################################
version: "3.7"

services:

  node-red:
    # image: node-red-realtime-sensing
    container_name: realtime-sensing_node-red
    build: node-red/
    restart: unless-stopped
    environment:
      - TZ=America/New_York
    networks:
      - realtime-sensing-net_backend
    ports:
      - 1880:1880
    volumes:
      - ./node-red/config.d:/data/:rw

  mongo:
    container_name: realtime-sensing_mongo
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: test_password
      MONGO_INITDB_DATABASE: sensors
    networks:
      - realtime-sensing-net_backend
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo-data:/data

  mongo-express:
    container_name: realtime-sensing_mongo-express
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    networks:
      - realtime-sensing-net_backend
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: test_password
      ME_CONFIG_MONGODB_URL: mongodb://root:test_password@mongo:27017
    volumes:
      - mongo-express-data:/data

  web:
    container_name: realtime-sensing_nodejs
    build: ./coreui-free-react-admin-template/
    command: npm run start
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - realtime-sensing-net_backend
    volumes:
      - ./coreui-free-react-admin-template/:/usr/app/:ro

  nginx:
    container_name: realtime-sensing_nginx
    restart: unless-stopped
    image: "nginx:latest"
    ports:
      # - "5085:5085"
      - "80:80"
    volumes:
      - ./nginx/:/etc/nginx/:ro
      - ./coreui-free-react-admin-template/build:/usr/share/nginx/html:ro
      - nginx-data:/data
    networks:
      - realtime-sensing-net_backend
      - realtime-sensing-net_frontend
    depends_on:
      - mongo
      - mongo-express
      - node-red

  cloudflared:
    container_name: realtime-sensing_cloudflared
    restart: unless-stopped
    image: "cloudflare/cloudflared:latest"
    # command: tunnel run --token ${CLOUDFLARE_TOKEN} --url http://localhost:80
    command: tunnel --url http://realtime-sensing_nginx:80  # this will open a tunnel on https://somedomain.trycloudflare.com, used for testing purposes
    networks:
      - realtime-sensing-net_frontend
      # - realtime-sensing-net_proxy


volumes:
  node-red-data:
  mongo-data:
  mongo-express-data:
  nginx-data:
  static:


networks:
  realtime-sensing-net_backend:
    driver: host
  realtime-sensing-net_frontend:
    driver: bridge
  # host:
  #   name: "host"
  #   external: true
  # realtime-sensing-net_proxy:
  #   driver: bridge
  #   external: true
